<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.snacks.mapper.EmpGoodsMapper">
  <resultMap id="BaseResultMap" type="com.yc.snacks.domain.EmpGoods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_num" jdbcType="INTEGER" property="goodsNum" />
    <result column="goods_status" jdbcType="INTEGER" property="goodsStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <resultMap id="CustomResultMap" type="com.yc.snacks.domain.GoodTypeNameSale">
    <result column="goods_type_name" jdbcType="VARCHAR" property="goodsTypeName" />
    <collection property="goodsSaleList" ofType="com.yc.snacks.domain.GoodsSale">
      <result column="good_name" jdbcType="VARCHAR" property="goodsName" />
      <result column="cnt" jdbcType="INTEGER" property="count" />
    </collection>

  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, emp_id, goods_id, goods_num, goods_status, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
  </select>

  <select id="selectByOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderIdAndEmpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where order_id = #{orderId,jdbcType=INTEGER}
    and emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderIdAndNoEmpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where order_id = #{orderId,jdbcType=INTEGER}
    and emp_id != #{empId,jdbcType=INTEGER}
  </select>
  <select id="selectByGoodsId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from yc_emp_goods
    where emp_id = #{empId,jdbcType=INTEGER}
    and goods_id=#{goodsId,jdbcType=INTEGER}
    and goods_status=1
  </select>
  <update id="updateGoodsStatusByOrderId" parameterType="java.lang.Integer">
    update yc_emp_goods set goods_status = #{goodsStatus,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <select id="querySelectedGoods" resultType="com.yc.snacks.domain.EmpGoods">
    select
    <include refid="Base_Column_List"/>
    from yc_emp_goods
    where emp_id = #{empId,jdbcType=INTEGER}
    and goods_id in
    <foreach collection="goodsIdList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and goods_status=1
  </select>

  <select id="selectByOrderIdsAndEmpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where order_id in
    <foreach collection="orderIdList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <select id="selectByOrderIdsAndNoEmpId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_emp_goods
    where order_id in
    <foreach collection="orderIdList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
    and emp_id != #{empId,jdbcType=INTEGER}
  </select>

  <select id="selectGoodTypeSale" resultMap="CustomResultMap">
      SELECT
      t1.goods_type_name,
      t2.`name` good_name,
      count( * ) cnt
  FROM
      yc_goods_type t1
      INNER JOIN yc_goods t2 ON t1.id = t2.goods_type_id
      INNER JOIN yc_emp_goods t3 ON t2.id = t3.goods_id
      AND t3.goods_status = 3
  GROUP BY
      t1.goods_type_name, good_name order by t1.goods_type_name, cnt desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yc_emp_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByGoodsId">
    delete from yc_emp_goods
    where emp_id=#{empId,jdbcType=INTEGER}
    and goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yc.snacks.domain.EmpGoods">
    insert into yc_emp_goods (id, order_id, emp_id, 
      goods_id, goods_num, goods_status, 
      create_time)
    values (#{id,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}, 
      #{goodsId,jdbcType=INTEGER}, #{goodsNum,jdbcType=INTEGER}, #{goodsStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.snacks.domain.EmpGoods">
    insert into yc_emp_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsNum != null">
        goods_num,
      </if>
      <if test="goodsStatus != null">
        goods_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null">
        #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.snacks.domain.EmpGoods">
    update yc_emp_goods
    <set>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsNum != null">
        goods_num = #{goodsNum,jdbcType=INTEGER},
      </if>
      <if test="goodsStatus != null">
        goods_status = #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.snacks.domain.EmpGoods">
    update yc_emp_goods
    set order_id = #{orderId,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      goods_num = #{goodsNum,jdbcType=INTEGER},
      goods_status = #{goodsStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateGoodsNum">
    update yc_emp_goods
    set goods_num = #{goodsNum,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
    and goods_id=#{goodsId,jdbcType=INTEGER}
    and goods_status=1
  </update>
  <update id="updateOrderId">
    update yc_emp_goods
    set order_id = #{orderId}
    where emp_id = #{empId,jdbcType=INTEGER}
    and goods_id in
    <foreach collection="goodsIdList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>
  <update id="updateGoodsStatus">
    update yc_emp_goods
    set goods_status = #{goodsStatus,jdbcType=INTEGER}
    where emp_id = #{empId,jdbcType=INTEGER}
    and goods_id in
    <foreach collection="goodsIdList" item="item" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </update>

</mapper>