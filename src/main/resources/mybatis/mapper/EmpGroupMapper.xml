<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.snacks.mapper.EmpGroupMapper">
  <resultMap id="BaseResultMap" type="com.yc.snacks.domain.EmpGroup">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_role_flag" jdbcType="INTEGER" property="empRoleFlag" />
    <result column="emp_amount" jdbcType="DECIMAL" property="empAmount" />
    <result column="emp_used_amount" jdbcType="DECIMAL" property="empUsedAmount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="first_login" jdbcType="INTEGER" property="firstLogin" />
  </resultMap>
  <sql id="Base_Column_List">
    id, group_id, emp_name, emp_id, emp_role_flag, emp_amount, emp_used_amount, create_time, 
    update_time, first_login
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from yc_emp_group
    where id = #{id,jdbcType=INTEGER}
  </select>
    <select id="selectByEmpId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from yc_emp_group
      where emp_id = #{empId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from yc_emp_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.yc.snacks.domain.EmpGroup">
    insert into yc_emp_group (id, group_id, emp_name, 
      emp_id, emp_role_flag, emp_amount, 
      emp_used_amount, create_time, update_time, 
      first_login)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR}, 
      #{empId,jdbcType=INTEGER}, #{empRoleFlag,jdbcType=INTEGER}, #{empAmount,jdbcType=DECIMAL}, 
      #{empUsedAmount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{firstLogin,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yc.snacks.domain.EmpGroup">
    insert into yc_emp_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empRoleFlag != null">
        emp_role_flag,
      </if>
      <if test="empAmount != null">
        emp_amount,
      </if>
      <if test="empUsedAmount != null">
        emp_used_amount,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="firstLogin != null">
        first_login,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=INTEGER},
      </if>
      <if test="empRoleFlag != null">
        #{empRoleFlag,jdbcType=INTEGER},
      </if>
      <if test="empAmount != null">
        #{empAmount,jdbcType=DECIMAL},
      </if>
      <if test="empUsedAmount != null">
        #{empUsedAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstLogin != null">
        #{firstLogin,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yc.snacks.domain.EmpGroup">
    update yc_emp_group
    <set>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=INTEGER},
      </if>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
      <if test="empRoleFlag != null">
        emp_role_flag = #{empRoleFlag,jdbcType=INTEGER},
      </if>
      <if test="empAmount != null">
        emp_amount = #{empAmount,jdbcType=DECIMAL},
      </if>
      <if test="empUsedAmount != null">
        emp_used_amount = #{empUsedAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstLogin != null">
        first_login = #{firstLogin,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yc.snacks.domain.EmpGroup">
    update yc_emp_group
    set group_id = #{groupId,jdbcType=INTEGER},
      emp_name = #{empName,jdbcType=VARCHAR},
      emp_id = #{empId,jdbcType=INTEGER},
      emp_role_flag = #{empRoleFlag,jdbcType=INTEGER},
      emp_amount = #{empAmount,jdbcType=DECIMAL},
      emp_used_amount = #{empUsedAmount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      first_login = #{firstLogin,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateLoginStatus">
    update yc_emp_group
    set first_login = 1
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <update id="updateUsedAmount">
    update yc_emp_group
    set emp_used_amount = #{empUsedAmount,jdbcType=DECIMAL}
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
</mapper>